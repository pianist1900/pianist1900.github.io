[{"author":null,"categories":null,"content":" 千里之行始于足下\nIntroduction to Python Course python 学习目标 1.熟练使用python，包括写、读程序和新python库的学习； 2.处理数据并实现可视化； 3.python自动化批量脚本； 4.通用大模型AI工具的辅助；\nGithub pages+Hugo建站流程 前置条件\n一个 GitHub 账号，如没有需要自行注册github账号； 本地安装 Git,由于我使用电脑是Mac，在terminal中输入git，如果没有安装会弹框提示，点击确认就行，相对容易；安装完成在terminal中输入git --version，输出类似信息:\u0026amp;ldquo;git version 2.39.5 (Apple Git-154)\u0026amp;ldquo;则说明安装成功，没有则需要检查安装； Hugo安装\nGithub pages支持三个快捷的网站框架，jekyll、hexo、hugo：\njekyll使用ruby编写，有github支持，可以将markdown文件直接放到git仓库，github会自动生成网页文件，同时Github一直是一个亲ruby的社区，找了一下jekyll主题感觉便丑，可能是我没找对； Hexo使用nodejs，Hexo提供了方便的部署命令，可以做到一条命令部署到github上，没找到太多的文档，放弃； Hugo使用go语言开发，Hugo的官方文档写的还不错，方便学习，同时部署简洁。 最后选择了Hugo。\n本地安装Hugo（brew是mac里安装包的一个管理软件）非常简单，我使用的是macOS，官方推荐用 homebrew方式:\nbrew install hugo 如果提示没有brew,需要自行安装homebrew，官网安装说明比较容易，有命令和pkg两种方式，这里我采用的是github下载pkg的方式，gui界面点点点就行。\n安装hugo完成后，在terminal中输入hugo version查看安装是否成功，输出类似的版本信息:\u0026amp;ldquo;hugo v0.149.1+extended+withdeploy darwin/arm64，则说明安装成功\n创建本地Hugo站点\n1.创建本地站点文件夹 在terminal中输入hugo new site test,test更换成想要的文件名：\nhugo new site test 执行完 …","date":1757984400,"dir":"notes/","expirydate":-62135596800,"fuzzywordcount":2200,"html":"","keywords":null,"kind":"page","lang":"en","lastmod":1757984400,"objectID":"7ab9ea892496c93e66891e7113febc28","permalink":"https://pianist1900.github.io/notes/2025-09-16-nt-pycourse-basic/","publishdate":"2025-09-16T09:00:00+08:00","readingtime":5,"relpermalink":"/notes/2025-09-16-nt-pycourse-basic/","section":"notes","tags":null,"title":"python学习｜安装与基础语法","type":"notes","url":"/notes/2025-09-16-nt-pycourse-basic/","weight":0,"wordcount":2145},{"author":null,"categories":null,"content":" Python install(conda+VScode方案) 选择VScode+conda方案主要是因为VScode对不同代码的支持还算不错，同时conda能很好的管理库，虽然我主要是用python，但是这个方案是我认为目前最合适我的方案，主要用于科学分析。\nanaconda的安装与使用\npython是一个开源的项目，也有比较多的编译器来使用，python程序环境+编译器(写代码和执行代码的地方)，常见的有pycharm,jupyter notebook,vscode以及Spyder等编译器，总体来讲基本一差不多，初学者建议使用anaconda。\n进入Anaconda官网下载与你系统匹配的版本（Windows/macOS/Linux）,现在下载需要注册账号，需要自行注册\n一路 “Next” 安装即可。Windows下推荐勾选 “Add Anaconda to PATH”。 安装完成后，打开终端（或 Anaconda Prompt），输入：conda --version,如果能显示版本号，说明安装成功。 anaconda本身比较厚重，如果你比较熟悉了，建议安装miniconda，一个轻量版的conda。 conda库管理\nAnaconda内置了很多科学计算与数据分析常用的库，conda的主要作用就是进行环境管理和库管理。为什么要进行库管理，因为不同版本之间的程序可能不相容，导致环境崩溃，因此可以采用针对不同项目配置不同的库环境。\n创建虚拟环境。 conda create -n myenv python=3.10 #创建环境 conda remove -n myenv --all #删除环境 程序中-n myenv 指环境名字叫 myenv，python=3.10 指定 Python 版本,这里可根据需求调整版本，当前python版本为3.13，如果不要求，则默认最新的python版本\n激活/退出环境 conda activate myenv #激活环境 conda deactivate #退出环境 安装与卸载库，可以指定安装库的版本 conda install numpy # 安装库 conda remove numpy # 卸载库 其它如环境查看、已安装库查看 # 查看已有环境 conda env list # 查看当前环境安装的库 conda list …","date":1757984400,"dir":"post/","expirydate":-62135596800,"fuzzywordcount":1700,"html":"系统性讲解python的基础，为后续分析提供支撑","keywords":null,"kind":"page","lang":"en","lastmod":1757984400,"objectID":"170a3d729b335a5b99d97355f444f289","permalink":"https://pianist1900.github.io/post/2025-09-16-nt-pycourse-basic/","publishdate":"2025-09-16T09:00:00+08:00","readingtime":4,"relpermalink":"/post/2025-09-16-nt-pycourse-basic/","section":"post","tags":null,"title":"python学习｜安装与基础语法","type":"post","url":"/post/2025-09-16-nt-pycourse-basic/","weight":0,"wordcount":1684},{"author":null,"categories":null,"content":" 一切从分享欲开始\n做技术工作已然有些时间了，大多数的学习都是来源于网络，有感网友的强大，也愈发觉得开源的美妙。从当初学python参考“廖雪峰的网站”，到做数据分析图参考“炸鸡人的博客”，在学习的过程中，发现他们都是有一个自己的网站。伴随着知识增加，开始逐渐想分享自己解决的一些问题，一些领域知识，在考察了知乎、小红书、CNDS之后，发现自己还是适合最存粹的网站，自己建个简单明了、没有限制的网站，于是开始了自己的探索。本篇记录利用github page+Hugo构建数据自己的网站(Mac为例)。\nGithub pages+Hugo建站流程 前置条件\n一个 GitHub 账号，如没有需要自行注册github账号； 本地安装 Git,由于我使用电脑是Mac，在terminal中输入git，如果没有安装会弹框提示，点击确认就行，相对容易；安装完成在terminal中输入git --version，输出类似信息:\u0026amp;ldquo;git version 2.39.5 (Apple Git-154)\u0026amp;ldquo;则说明安装成功，没有则需要检查安装； Hugo安装\nGithub pages支持三个快捷的网站框架，jekyll、hexo、hugo：\njekyll使用ruby编写，有github支持，可以将markdown文件直接放到git仓库，github会自动生成网页文件，同时Github一直是一个亲ruby的社区，找了一下jekyll主题感觉便丑，可能是我没找对； Hexo使用nodejs，Hexo提供了方便的部署命令，可以做到一条命令部署到github上，没找到太多的文档，放弃； Hugo使用go语言开发，Hugo的官方文档写的还不错，方便学习，同时部署简洁。 最后选择了Hugo。\n本地安装Hugo（brew是mac里安装包的一个管理软件）非常简单，我使用的是macOS，官方推荐用 homebrew方式:\nbrew install hugo 如果提示没有brew,需要自行安装homebrew，官网安装说明比较容易，有命令和pkg两种方式，这里我采用的是github下载pkg的方式，gui界面点点点就行。\n安装hugo完成后，在terminal中输入hugo version查看安装是否成功，输出类似的版本信息:\u0026amp;ldquo;hugo …","date":1757538000,"dir":"notes/","expirydate":-62135596800,"fuzzywordcount":2300,"html":"利用github page+Hugo构建数据自己的网站","keywords":null,"kind":"page","lang":"en","lastmod":1757538000,"objectID":"dd2585c8fcb64e6aca0e1d0bd72e96ba","permalink":"https://pianist1900.github.io/notes/2025-09-11-nt-buildsites/","publishdate":"2025-09-11T05:00:00+08:00","readingtime":5,"relpermalink":"/notes/2025-09-11-nt-buildsites/","section":"notes","tags":null,"title":"技术工具｜构建自己的网站","type":"notes","url":"/notes/2025-09-11-nt-buildsites/","weight":0,"wordcount":2298},{"author":null,"categories":null,"content":" 一切从分享欲开始\n做技术工作已然有些时间了，大多数的学习都是来源于网络，有感网友的强大，也愈发觉得开源的美妙。从当初学python参考“廖雪峰的网站”，到做数据分析图参考“炸鸡人的博客”，在学习的过程中，发现他们都是有一个自己的网站。伴随着知识增加，开始逐渐想分享自己解决的一些问题，一些领域知识，在考察了知乎、小红书、CNDS之后，发现自己还是适合最存粹的网站，自己建个简单明了、没有限制的网站，于是开始了自己的探索。本篇记录利用github page+Hugo构建数据自己的网站(Mac为例)。\nGithub pages+Hugo建站流程 前置条件\n一个 GitHub 账号，如没有需要自行注册github账号； 本地安装 Git,由于我使用电脑是Mac，在terminal中输入git，如果没有安装会弹框提示，点击确认就行，相对容易；安装完成在terminal中输入git --version，输出类似信息:\u0026amp;ldquo;git version 2.39.5 (Apple Git-154)\u0026amp;ldquo;则说明安装成功，没有则需要检查安装； Hugo安装\nGithub pages支持三个快捷的网站框架，jekyll、hexo、hugo：\njekyll使用ruby编写，有github支持，可以将markdown文件直接放到git仓库，github会自动生成网页文件，同时Github一直是一个亲ruby的社区，找了一下jekyll主题感觉便丑，可能是我没找对； Hexo使用nodejs，Hexo提供了方便的部署命令，可以做到一条命令部署到github上，没找到太多的文档，放弃； Hugo使用go语言开发，Hugo的官方文档写的还不错，方便学习，同时部署简洁。 最后选择了Hugo。\n本地安装Hugo（brew是mac里安装包的一个管理软件）非常简单，我使用的是macOS，官方推荐用 homebrew方式:\nbrew install hugo 如果提示没有brew,需要自行安装homebrew，官网安装说明比较容易，有命令和pkg两种方式，这里我采用的是github下载pkg的方式，gui界面点点点就行。\n安装hugo完成后，在terminal中输入hugo version查看安装是否成功，输出类似的版本信息:\u0026amp;ldquo;hugo …","date":1757538000,"dir":"post/","expirydate":-62135596800,"fuzzywordcount":2300,"html":"利用github page+Hugo构建数据自己的网站","keywords":null,"kind":"page","lang":"en","lastmod":1757538000,"objectID":"cf852e59b906099943de114f93d3026b","permalink":"https://pianist1900.github.io/post/2025-09-11-nt-buildsites/","publishdate":"2025-09-11T05:00:00+08:00","readingtime":5,"relpermalink":"/post/2025-09-11-nt-buildsites/","section":"post","tags":null,"title":"技术工具｜构建自己的网站","type":"post","url":"/post/2025-09-11-nt-buildsites/","weight":0,"wordcount":2298},{"author":null,"categories":null,"content":"这里是阅读栏目。\n","date":1757379600,"dir":"reading/","expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":1757379600,"objectID":"598c918a08d683de1ba62be963fe0ac6","permalink":"https://pianist1900.github.io/reading/","publishdate":"2025-09-09T09:00:00+08:00","readingtime":1,"relpermalink":"/reading/","section":"reading","tags":null,"title":"Reading","type":"reading","url":"/reading/","weight":0,"wordcount":8},{"author":null,"categories":null,"content":" 流水不争先，争的是滔滔不绝。\n缘起：一生的奋斗目标 浣溪沙·最怕问初衷\n“最怕问初衷，大梦成空。 眉间鬓上老英雄，剑甲鞮鍪封厚土，说甚擒龙。 壮志付西风，逝去无踪。 少年早作一闲翁，诗酒琴棋终日里，岁月匆匆。”初到燕园，被问得最多的是为什么来，当时的回答主要是对原来地方的不满，其实还有另外一个面，就是对未来的构想，其实对未来我是有一定的构想的，一个小小的梦，只是随着时间推移，慢慢的不提了。4年过去，似乎一切由变得清晰。 2. 有目标总归是好的\n从过往的经历来看，人是会变的，但是有一些东西却逐渐沉淀下来，那就是有一个目标，然后就像李小龙说的，目标并不一定是为了实现，而是有一个可以标准的靶子。但是要实现这个目标，需要有太多要做的事情，同时开展过多的事情，会让人开始迷茫，一种倦怠的情绪开始蔓延，不再是雄心勃勃，眼里的光开始暗淡。于是乎开始寻找支撑的力量，最近总是从视频中寻找力量，至于为什么则是因为视频易获取，尤其是小视频，但这终归得不到答案，继而更加彷徨、忧郁和沉沦。沉沦之后，又开始挣扎爬起，想到了行动的力量，想到了其实很多事并不会花费那么多时间，天下事行则易，继而想起了若干年前看的《奇特的一生》。人真的可以做成很多事。\n拥抱镜子中的自己\n《奇特的一生》中柳比歇夫独特的人生方式：他将自己的一生几乎完全建立在严谨的时间管理之上，每天精确记录学习、工作和休闲的时间，几十年如一日，坚持不懈。通过这种方法，不仅在昆虫学、农业、数学、哲学等多个领域取得了卓越成就，还始终保持着对生活的热爱与从容，展示了时间管理的巨大力量，也启发我思考如何在有限的生命里创造属于自己的无限可能。也许一切都有可能，只是我们需要拥抱镜子中的自己，审视自己后的改变。 真正的成就来自于行动 行动的意义，不在于一时的激情，而在于日复一日的坚持。今早喜欢上重新看到一句词，流水不争先，争的是滔滔不绝。\n","date":1757379600,"dir":"post/","expirydate":-62135596800,"fuzzywordcount":800,"html":"想做的事太多太多，以至于不知如何下手，回顾柳比歇夫，寻找动力","keywords":null,"kind":"page","lang":"en","lastmod":1757379600,"objectID":"17466a0d68a0604f28e69f0e742fd337","permalink":"https://pianist1900.github.io/post/2025-09-09-rd-qitedeyisheng/","publishdate":"2025-09-09T09:00:00+08:00","readingtime":2,"relpermalink":"/post/2025-09-09-rd-qitedeyisheng/","section":"post","tags":null,"title":"开站记｜总有那么多想做的事","type":"post","url":"/post/2025-09-09-rd-qitedeyisheng/","weight":0,"wordcount":774},{"author":null,"categories":null,"content":" 流水不争先，争的是滔滔不绝。\n缘起：一生的奋斗目标 浣溪沙·最怕问初衷\n“最怕问初衷，大梦成空。 眉间鬓上老英雄，剑甲鞮鍪封厚土，说甚擒龙。 壮志付西风，逝去无踪。 少年早作一闲翁，诗酒琴棋终日里，岁月匆匆。”初到燕园，被问得最多的是为什么来，当时的回答主要是对原来地方的不满，其实还有另外一个面，就是对未来的构想，其实对未来我是有一定的构想的，一个小小的梦，只是随着时间推移，慢慢的不提了。4年过去，似乎一切由变得清晰。 2. 有目标总归是好的\n从过往的经历来看，人是会变的，但是有一些东西却逐渐沉淀下来，那就是有一个目标，然后就像李小龙说的，目标并不一定是为了实现，而是有一个可以标准的靶子。但是要实现这个目标，需要有太多要做的事情，同时开展过多的事情，会让人开始迷茫，一种倦怠的情绪开始蔓延，不再是雄心勃勃，眼里的光开始暗淡。于是乎开始寻找支撑的力量，最近总是从视频中寻找力量，至于为什么则是因为视频易获取，尤其是小视频，但这终归得不到答案，继而更加彷徨、忧郁和沉沦。沉沦之后，又开始挣扎爬起，想到了行动的力量，想到了其实很多事并不会花费那么多时间，天下事行则易，继而想起了若干年前看的《奇特的一生》。人真的可以做成很多事。\n拥抱镜子中的自己\n《奇特的一生》中柳比歇夫独特的人生方式：他将自己的一生几乎完全建立在严谨的时间管理之上，每天精确记录学习、工作和休闲的时间，几十年如一日，坚持不懈。通过这种方法，不仅在昆虫学、农业、数学、哲学等多个领域取得了卓越成就，还始终保持着对生活的热爱与从容，展示了时间管理的巨大力量，也启发我思考如何在有限的生命里创造属于自己的无限可能。也许一切都有可能，只是我们需要拥抱镜子中的自己，审视自己后的改变。 真正的成就来自于行动 行动的意义，不在于一时的激情，而在于日复一日的坚持。今早喜欢上重新看到一句词，流水不争先，争的是滔滔不绝。\n","date":1757379600,"dir":"reading/","expirydate":-62135596800,"fuzzywordcount":800,"html":"想做的事太多太多，以至于不知如何下手，回顾柳比歇夫，寻找动力","keywords":null,"kind":"page","lang":"en","lastmod":1757379600,"objectID":"62025925a937158ce51b6f2dd45f4235","permalink":"https://pianist1900.github.io/reading/2025-09-09-rd-qitedeyisheng/","publishdate":"2025-09-09T09:00:00+08:00","readingtime":2,"relpermalink":"/reading/2025-09-09-rd-qitedeyisheng/","section":"reading","tags":null,"title":"开站记｜总有那么多想做的事","type":"reading","url":"/reading/2025-09-09-rd-qitedeyisheng/","weight":0,"wordcount":774},{"author":null,"categories":null,"content":" 山是山来海是海，知从行中来。\n为什么做这个网站 这个站点有三个目的：\n记录自己的生活与见解\n包括读书、旅行、日常所见所思。数字社会里信息滚滚向前，我希望把属于自己的观察、判断与小小的创见沉淀下来，哪怕只是一个片段，也能成为将来的参照。\n记录学习与感触，写在遗忘之前\n“书到用时方恨少，事非经过不知难。” 现在的社会，事多、节奏快，记忆难免滑落。我想把知识要点、踩坑与反思系统化记录：遇到问题—查证—复现—复盘，尽量配上简洁的图表与可运行的示例，方便未来的自己和有缘的你快速检索。\n系统性分享大气领域内的部分代码\n包括数据清洗与可视化、大气化学数据分析与计算、盒子模型模拟分析、卫星数据处理等工作学习内容。计划采用：\n可复现实验：notebook + 数据样例 + 结果截图 规范化结构：背景 → 方法/代码 → 结果 → 讨论/局限 → 参考 版本管理：重要脚本会给出 tag 与 变更记录，方便对比与回滚 写在最后 把热爱落在文字里，把问题交给时间；愿每一篇记录，都能让明天的自己少走一小步弯路。\n","date":1757120400,"dir":"post/","expirydate":-62135596800,"fuzzywordcount":500,"html":"记录生活与见解、沉淀学习与感触、分享大气科学相关代码。","keywords":null,"kind":"page","lang":"en","lastmod":1757120400,"objectID":"b4a57324680f0e163e5e4fc1ed9a6cfd","permalink":"https://pianist1900.github.io/post/hello-world/","publishdate":"2025-09-06T09:00:00+08:00","readingtime":1,"relpermalink":"/post/hello-world/","section":"post","tags":null,"title":"开站记","type":"post","url":"/post/hello-world/","weight":0,"wordcount":418},{"author":null,"categories":null,"content":" 山是山来海是海，知从行中来。\n为什么做这个网站 这个站点有三个目的：\n记录自己的生活与见解\n包括读书、旅行、日常所见所思。数字社会里信息滚滚向前，我希望把属于自己的观察、判断与小小的创见沉淀下来，哪怕只是一个片段，也能成为将来的参照。\n记录学习与感触，写在遗忘之前\n“书到用时方恨少，事非经过不知难。” 现在的社会，事多、节奏快，记忆难免滑落。我想把知识要点、踩坑与反思系统化记录：遇到问题—查证—复现—复盘，尽量配上简洁的图表与可运行的示例，方便未来的自己和有缘的你快速检索。\n系统性分享大气领域内的部分代码\n包括数据清洗与可视化、辐射与光化学计算、HONO/HNO₃/NH₃ 等关键物种处理、时间序列建模与因果分析等。计划采用：\n可复现实验：notebook + 数据样例 + 结果截图 规范化结构：背景 → 方法/代码 → 结果 → 讨论/局限 → 参考 版本管理：重要脚本会给出 tag 与 变更记录，方便对比与回滚 写在最后 把热爱落在文字里，把问题交给时间；愿每一篇记录，都能让明天的自己少走一小步弯路。\n","date":1757120400,"dir":"notes/","expirydate":-62135596800,"fuzzywordcount":500,"html":"记录生活与见解、沉淀学习与感触、分享大气科学相关代码。","keywords":null,"kind":"page","lang":"en","lastmod":1757120400,"objectID":"75f830362f1ef0b5ab770c9888b79ce6","permalink":"https://pianist1900.github.io/notes/hello-world/","publishdate":"2025-09-06T09:00:00+08:00","readingtime":1,"relpermalink":"/notes/hello-world/","section":"notes","tags":null,"title":"开站记｜写在遗忘之前","type":"notes","url":"/notes/hello-world/","weight":0,"wordcount":426},{"author":null,"categories":null,"content":"About Me 博士候选人，专注大气化学研究，主要聚焦于 大气氧化性：从臭氧和二次 PM₂.₅ 的化学机制与污染成因，到活性物种清单编制、模型工具（拉格朗日扩散模型、盒子模型、空气质量模型）与 AI 方法的研发。 生活中则是一条“杂鱼”：偶尔翻翻社会、经济、历史、文学等杂书；偶尔追追美剧和国漫；偶尔打打游戏，水平不高但热情不减。 ✨ 研究上想把空气讲清楚，生活里只想做个自在的普通人。\nPhD candidate specializing in atmospheric chemistry, with a focus on atmospheric oxidation: investigating the chemical mechanisms and causes of ozone and secondary PM₂.₅, developing reactive species emission inventories, modeling tools (Lagrangian dispersion, box models, and air quality models), and exploring applications of AI in atmospheric research. Outside the lab, just an ordinary “small fish”: reading across society, economics, history, and literature; watching U.S. dramas and Chinese animation; and playing video games—terrible at them, but enjoying every minute. ✨ Seeking clarity in the chemistry of the air, and simplicity in the flow of life.\nFeel free to connect me writing him an email.\n","date":-62135596800,"dir":"about/","expirydate":-62135596800,"fuzzywordcount":400,"html":null,"keywords":null,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"8576ec274c98b3831668a172fa632d80","permalink":"https://pianist1900.github.io/about/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/about/","section":"","tags":null,"title":"","type":"page","url":"/about/","weight":0,"wordcount":308},{"author":null,"categories":null,"content":"这里是大气相关栏目。\n","date":-62135596800,"dir":"atmosphere/","expirydate":-62135596800,"fuzzywordcount":100,"html":null,"keywords":null,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"b0428ddb080d9f72cb77cd3943e3efd0","permalink":"https://pianist1900.github.io/atmosphere/","publishdate":"0001-01-01T00:00:00Z","readingtime":1,"relpermalink":"/atmosphere/","section":"atmosphere","tags":null,"title":"atmosphere","type":"atmosphere","url":"/atmosphere/","weight":0,"wordcount":10}]